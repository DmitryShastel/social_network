{"ast":null,"code":"var _jsxFileName = \"C:\\\\incubator\\\\social_network(js)\\\\src\\\\components\\\\Users\\\\UsersContainer.js\";\nimport React from \"react\";\nimport { follow, setCurrentPage, setTotalUserslCount, setUsers, toggleIsFetching, unfollow } from \"../../redux/users-reducer\";\nimport { connect } from \"react-redux\";\nimport { Users } from \"./Users\";\nimport { Preloader } from \"../common/Preloader/Preloader\";\nimport { userAPI } from \"../../Api/api\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(data.items);\n      this.props.setTotalUserslCount(data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUserCount: this.props.totalUserCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUserCount: state.usersPage.totalUserCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n          dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUserslCount,\n  toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["C:/incubator/social_network(js)/src/components/Users/UsersContainer.js"],"names":["React","follow","setCurrentPage","setTotalUserslCount","setUsers","toggleIsFetching","unfollow","connect","Users","Preloader","userAPI","UsersContainer","Component","onPageChanged","pageNumber","props","getUsers","pageSize","then","data","items","componentDidMount","currentPage","totalCount","render","isFetching","totalUserCount","users","mapStateToProps","state","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,MADJ,EAEIC,cAFJ,EAGIC,mBAHJ,EAIIC,QAJJ,EAKIC,gBALJ,EAMIC,QANJ,QAOO,2BAPP;AAQA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,SAAR,QAAwB,+BAAxB;AACA,SAAQC,OAAR,QAAsB,eAAtB;;AAGA,MAAMC,cAAN,SAA6BX,KAAK,CAACY,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAazCC,aAbyC,GAaxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWb,cAAX,CAA0BY,UAA1B;AACA,WAAKC,KAAL,CAAWV,gBAAX,CAA4B,IAA5B;AAEAK,MAAAA,OAAO,CAACM,QAAR,CAAiBF,UAAjB,EAA6B,KAAKC,KAAL,CAAWE,QAAxC,EACKC,IADL,CACUC,IAAI,IAAI;AACV,aAAKJ,KAAL,CAAWV,gBAAX,CAA4B,KAA5B;AACA,aAAKU,KAAL,CAAWX,QAAX,CAAoBe,IAAI,CAACC,KAAzB;AACH,OAJL;AAKH,KAtBwC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,KAAL,CAAWV,gBAAX,CAA4B,IAA5B;AAEAK,IAAAA,OAAO,CAACM,QAAR,CAAiB,KAAKD,KAAL,CAAWO,WAA5B,EAAyC,KAAKP,KAAL,CAAWE,QAApD,EAA8DC,IAA9D,CAAmEC,IAAI,IAAI;AAEnE,WAAKJ,KAAL,CAAWV,gBAAX,CAA4B,KAA5B;AACA,WAAKU,KAAL,CAAWX,QAAX,CAAoBe,IAAI,CAACC,KAAzB;AACA,WAAKL,KAAL,CAAWZ,mBAAX,CAA+BgB,IAAI,CAACI,UAApC;AACH,KALL;AAMH;;AAcDC,EAAAA,MAAM,GAAG;AACL,wBAAO,0CACF,KAAKT,KAAL,CAAWU,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAsC,IADpC,eAEH,oBAAC,KAAD;AAAO,MAAA,cAAc,EAAI,KAAKV,KAAL,CAAWW,cAApC;AACO,MAAA,QAAQ,EAAI,KAAKX,KAAL,CAAWE,QAD9B;AAEO,MAAA,WAAW,EAAI,KAAKF,KAAL,CAAWO,WAFjC;AAGO,MAAA,aAAa,EAAI,KAAKT,aAH7B;AAIO,MAAA,KAAK,EAAI,KAAKE,KAAL,CAAWY,KAJ3B;AAKO,MAAA,MAAM,EAAI,KAAKZ,KAAL,CAAWd,MAL5B;AAMO,MAAA,QAAQ,EAAI,KAAKc,KAAL,CAAWT,QAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAWH;;AArCwC;;AAwC7C,IAAIsB,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,KAAK,EAAEE,KAAK,CAACC,SAAN,CAAgBH,KADpB;AAEHV,IAAAA,QAAQ,EAAEY,KAAK,CAACC,SAAN,CAAgBb,QAFvB;AAGHS,IAAAA,cAAc,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,cAH7B;AAIHJ,IAAAA,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR,WAJ1B;AAKHG,IAAAA,UAAU,EAAEI,KAAK,CAACC,SAAN,CAAgBL;AALzB,GAAP;AAOH,CARD;AAUA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,eAAelB,OAAO,CAACqB,eAAD,EAAkB;AACpC3B,EAAAA,MADoC;AAEpCK,EAAAA,QAFoC;AAGpCF,EAAAA,QAHoC;AAIpCF,EAAAA,cAJoC;AAKpCC,EAAAA,mBALoC;AAMpCE,EAAAA;AANoC,CAAlB,CAAP,CAOZM,cAPY,CAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUserslCount,\r\n    setUsers,\r\n    toggleIsFetching,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {userAPI} from \"../../Api/api\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n\r\n        userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n            \r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(data.items);\r\n                this.props.setTotalUserslCount(data.totalCount);\r\n            });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n\r\n        userAPI.getUsers(pageNumber, this.props.pageSize)\r\n            .then(data => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(data.items);\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/>: null}\r\n            <Users totalUserCount = {this.props.totalUserCount}\r\n                   pageSize = {this.props.pageSize}\r\n                   currentPage = {this.props.currentPage}\r\n                   onPageChanged = {this.onPageChanged}\r\n                   users = {this.props.users}\r\n                   follow = {this.props.follow}\r\n                   unfollow = {this.props.unfollow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUserCount: state.usersPage.totalUserCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n          dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUserslCount,\r\n    toggleIsFetching\r\n})(UsersContainer);\r\n"]},"metadata":{},"sourceType":"module"}