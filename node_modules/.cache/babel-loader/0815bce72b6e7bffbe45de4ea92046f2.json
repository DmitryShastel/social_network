{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nlet inishialState = {\n  users: [],\n  pageSize: 1,\n  totalUserCount: 5 //currentPage: 5\n\n};\nexport const usersReducer = (state = inishialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUserCount: action.count\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPageAC = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setUsersTotalCountAC = totalUserCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUserCount\n});","map":{"version":3,"sources":["C:/incubator/social_network(js)/src/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","inishialState","users","pageSize","totalUserCount","usersReducer","state","action","type","map","u","id","userId","followed","currentPage","count","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setUsersTotalCountAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AAEA,IAAIC,aAAa,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,QAAQ,EAAE,CAFM;AAGhBC,EAAAA,cAAc,EAAE,CAHA,CAIhB;;AAJgB,CAApB;AAOA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AAE3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,MAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYO,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKb,QAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYO,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKZ,SAAL;AAAgB;AACZ,eAAO,EAAC,GAAGQ,KAAJ;AAAWJ,UAAAA,KAAK,EAAEK,MAAM,CAACL;AAAzB,SAAP;AACH;;AACD,SAAKH,gBAAL;AAAuB;AACnB,eAAO,EAAC,GAAGO,KAAJ;AAAWQ,UAAAA,WAAW,EAAEP,MAAM,CAACO;AAA/B,SAAP;AACH;;AACD,SAAKd,qBAAL;AAA4B;AACxB,eAAO,EAAC,GAAGM,KAAJ;AAAWF,UAAAA,cAAc,EAAEG,MAAM,CAACQ;AAAlC,SAAP;AACH;;AACD;AACI,aAAOT,KAAP;AA/BR;AAiCH,CAnCM;AAqCP,OAAO,MAAMU,QAAQ,GAAIJ,MAAD,KAAa;AAAEJ,EAAAA,IAAI,EAAEZ,MAAR;AAAgBgB,EAAAA;AAAhB,CAAb,CAAjB;AACP,OAAO,MAAMK,UAAU,GAAIL,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAAEX,QAAP;AAAiBe,EAAAA;AAAjB,CAAb,CAAnB;AACP,OAAO,MAAMM,UAAU,GAAIhB,KAAD,KAAY;AAACM,EAAAA,IAAI,EAAEV,SAAP;AAAkBI,EAAAA;AAAlB,CAAZ,CAAnB;AACP,OAAO,MAAMiB,gBAAgB,GAAIL,WAAD,KAAkB;AAACN,EAAAA,IAAI,EAAET,gBAAP;AAAyBe,EAAAA;AAAzB,CAAlB,CAAzB;AACP,OAAO,MAAMM,oBAAoB,GAAIhB,cAAD,KAAqB;AAACI,EAAAA,IAAI,EAAER,qBAAP;AAA8Be,EAAAA,KAAK,EAAEX;AAArC,CAArB,CAA7B","sourcesContent":["const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\n\r\nlet inishialState = {\r\n    users: [],\r\n    pageSize: 1,\r\n    totalUserCount: 5,\r\n    //currentPage: 5\r\n}\r\n\r\nexport const usersReducer = (state = inishialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUserCount: action.count}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followAC = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPageAC = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setUsersTotalCountAC = (totalUserCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUserCount})\r\n\r\n"]},"metadata":{},"sourceType":"module"}