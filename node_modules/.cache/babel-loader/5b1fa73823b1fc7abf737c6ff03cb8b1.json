{"ast":null,"code":"var _jsxFileName = \"C:\\\\incubator\\\\social_network(js)\\\\src\\\\components\\\\Users\\\\UsersContainer.js\";\nimport React from \"react\";\nimport { followAC, setCurrentPageAC, setUsersAC, setUsersTotalCountAC, unfollowAC } from \"../../redux/users-reducer\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Users } from \"./Users\";\nimport logo from \"../../assets/images/logo.svg\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count = ${this.props.pageSize}`).then(response => {\n        debugger;\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count = ${this.props.pageSize}`).then(response => {\n      debugger;\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUserCount: this.props.totalUserCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUserCount: state.usersPage.totalUserCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totaCount => {\n      dispatch(setUsersTotalCountAC(totaCount));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["C:/incubator/social_network(js)/src/components/Users/UsersContainer.js"],"names":["React","followAC","setCurrentPageAC","setUsersAC","setUsersTotalCountAC","unfollowAC","connect","axios","Users","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","get","currentPage","pageSize","then","response","setUsers","data","items","componentDidMount","setTotalUsersCount","totalCount","render","isFetching","logo","totalUserCount","users","follow","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId","totaCount"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {followAC, setCurrentPageAC, setUsersAC, setUsersTotalCountAC, unfollowAC} from \"../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {Users} from \"./Users\";\r\nimport logo from '../../assets/images/logo.svg'\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count = ${this.props.pageSize}`)\r\n            .then(response => {\r\n                debugger;\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count = ${this.props.pageSize}`)\r\n            .then(response => {\r\n                debugger;\r\n                this.props.setUsers(response.data.items);\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <img src={logo}/>: null}\r\n            <Users totalUserCount = {this.props.totalUserCount}\r\n                   pageSize = {this.props.pageSize}\r\n                   currentPage = {this.props.currentPage}\r\n                   onPageChanged = {this.onPageChanged}\r\n                   users = {this.props.users}\r\n                   follow = {this.props.follow}\r\n                   unfollow = {this.props.unfollow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUserCount: state.usersPage.totalUserCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totaCount) => {\r\n            dispatch(setUsersTotalCountAC(totaCount))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\r\n"]},"metadata":{},"sourceType":"module"}