{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you',\n        likesCount: 12\n      }, {\n        id: 2,\n        message: 'It\\'s my first post',\n        likesCount: 11\n      }],\n      newPostText: ''\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'Yo'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }, {\n        id: 4,\n        message: 'Yo'\n      }, {\n        id: 5,\n        message: 'Yo'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Dimych'\n      }, {\n        id: 2,\n        name: 'Andrew'\n      }, {\n        id: 3,\n        name: 'Sveta'\n      }, {\n        id: 4,\n        name: 'Sasha'\n      }, {\n        id: 5,\n        name: 'Viktor'\n      }, {\n        id: 6,\n        name: 'Valera'\n      }],\n      newMessageBody: \"\"\n    },\n    sidebar: {\n      friends: [{\n        name: \"Andrew\"\n      }, {\n        name: \"Artem\"\n      }, {\n        name: \"Alexander\"\n      }]\n    }\n  },\n\n  _callSubscriber() {\n    console.log('State changed');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    //{ type: 'ADD-POST'}\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        likesCount: 0\n      };\n\n      this._state.profilePage.posts.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._renderEntireTree(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._renderEntireTree(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._state.dialogsPage.newMessageBody = action.body;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      let body = this._state.dialogsPage.newMessageBody;\n      this.state.dialogsPage.newMessageBody = '';\n\n      this._stated.dialogsPage.messages.push({\n        id: 6,\n        message: body\n      });\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const sendMessageCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateNewMessagebodyCreator = body => ({\n  type: UPDATE_NEW_MESSAGE_BODY,\n  body: body\n});\nexport default store;\nwindow.store = store; // store OOP","map":{"version":3,"sources":["C:/incubator/social_network(js)/src/redux/state.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","messages","dialogs","name","newMessageBody","sidebar","friends","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","type","newPost","push","_renderEntireTree","newText","body","state","_stated","addPostActionCreator","updateNewPostTextActionCreator","text","sendMessageCreator","updateNewMessagebodyCreator","window"],"mappings":"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","sourcesContent":["const ADD_POST = 'ADD-POST'\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY'\r\nconst SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\nlet store = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: 'Hi, how are you', likesCount: 12},\r\n                {id: 2, message: 'It\\'s my first post', likesCount: 11}\r\n            ],\r\n            newPostText: ''\r\n        },\r\n        dialogsPage: {\r\n            messages: [\r\n                {id: 1, message: 'Hi'},\r\n                {id: 2, message: 'Yo'},\r\n                {id: 3, message: 'Yo'},\r\n                {id: 4, message: 'Yo'},\r\n                {id: 5, message: 'Yo'},\r\n            ],\r\n\r\n            dialogs: [\r\n                {id: 1, name: 'Dimych'},\r\n                {id: 2, name: 'Andrew'},\r\n                {id: 3, name: 'Sveta'},\r\n                {id: 4, name: 'Sasha'},\r\n                {id: 5, name: 'Viktor'},\r\n                {id: 6, name: 'Valera'},\r\n            ],\r\n            newMessageBody: \"\"\r\n        },\r\n        sidebar: {\r\n            friends: [\r\n                {name: \"Andrew\"},\r\n                {name: \"Artem\"},\r\n                {name: \"Alexander\"},\r\n            ]\r\n        }\r\n    },\r\n\r\n    _callSubscriber() {\r\n        console.log('State changed')\r\n    },\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer\r\n    },\r\n\r\n    dispatch(action) { //{ type: 'ADD-POST'}\r\n        if (action.type === ADD_POST) {\r\n            let newPost = {\r\n                id: 5,\r\n                message: this._state.profilePage.newPostText,\r\n                likesCount: 0\r\n            };\r\n            this._state.profilePage.posts.push(newPost);\r\n            this._state.profilePage.newPostText = '';\r\n            this._renderEntireTree(this._state);\r\n        } else if (action.type === UPDATE_NEW_POST_TEXT) {\r\n            this._state.profilePage.newPostText = action.newText;\r\n            this._renderEntireTree(this._state);\r\n        } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\r\n            this._state.dialogsPage.newMessageBody = action.body;\r\n            this._callSubscriber(this._state);\r\n        } else if (action.type === SEND_MESSAGE) {\r\n            let body = this._state.dialogsPage.newMessageBody;\r\n            this.state.dialogsPage.newMessageBody = '';\r\n            this._stated.dialogsPage.messages.push({id: 6, message: body},);\r\n            this._callSubscriber(this._state);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST })\r\nexport const updateNewPostTextActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text})\r\nexport const sendMessageCreator = () => ({ type: SEND_MESSAGE })\r\nexport const updateNewMessagebodyCreator = (body) => ({type: UPDATE_NEW_MESSAGE_BODY, body: body })\r\n\r\nexport default store;\r\nwindow.store = store;\r\n\r\n// store OOP"]},"metadata":{},"sourceType":"module"}