{"ast":null,"code":"var _jsxFileName = \"C:\\\\incubator\\\\social_network(js)\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.jsx\";\nimport React from \"react\";\nimport { sendMessageCreator, updateNewMessagebodyCreator } from \"../../redux/dialogs-reducer\";\nimport { Dialogs } from \"./Dialogs\";\nimport { StoreContext } from \"../../StoreContext\";\nimport { connect } from \"react-redux\";\nexport const DialogsContainer = () => {\n  // don't write the bracket on the same line\n  return /*#__PURE__*/React.createElement(StoreContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }\n  }, store => {\n    let onSendMessageClick = () => {\n      store.dispatch(sendMessageCreator());\n    };\n\n    let onNewMessageChange = body => {\n      store.dispatch(updateNewMessagebodyCreator(body));\n    };\n\n    return /*#__PURE__*/React.createElement(Dialogs, {\n      updateNewMessageBody: onNewMessageChange,\n      sendMessage: onSendMessageClick,\n      dialogsPage: store.getState().dialogsPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    });\n  });\n};\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessageBody: () => {\n      dispatch(sendMessageCreator());\n    },\n    sendMessage: body => {\n      dispatch(updateNewMessagebodyCreator(body));\n    }\n  };\n};\n\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);","map":{"version":3,"sources":["C:/incubator/social_network(js)/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","sendMessageCreator","updateNewMessagebodyCreator","Dialogs","StoreContext","connect","DialogsContainer","store","onSendMessageClick","dispatch","onNewMessageChange","body","getState","dialogsPage","mapStateToProps","state","mapDispatchToProps","updateNewMessageBody","sendMessage","SuperDialogsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,EAA4BC,2BAA5B,QAA8D,6BAA9D;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAElC;AACA,sBAAO,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDC,KAAD,IAAW;AAER,QAAIC,kBAAkB,GAAG,MAAM;AAC3BD,MAAAA,KAAK,CAACE,QAAN,CAAeR,kBAAkB,EAAjC;AACH,KAFD;;AAGA,QAAIS,kBAAkB,GAAIC,IAAD,IAAU;AAC/BJ,MAAAA,KAAK,CAACE,QAAN,CAAeP,2BAA2B,CAACS,IAAD,CAA1C;AACH,KAFD;;AAIA,wBACI,oBAAC,OAAD;AAAS,MAAA,oBAAoB,EAAID,kBAAjC;AACS,MAAA,WAAW,EAAIF,kBADxB;AAES,MAAA,WAAW,EAAID,KAAK,CAACK,QAAN,GAAiBC,WAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAIH,GAdE,CAAP;AAiBH,CApBM;;AAsBP,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,WAAW,EAAEE,KAAK,CAACF;AADhB,GAAP;AAGH,CAJD;;AAMA,IAAIG,kBAAkB,GAAIP,QAAD,IAAc;AACnC,SAAO;AACHQ,IAAAA,oBAAoB,EAAE,MAAM;AACxBR,MAAAA,QAAQ,CAACR,kBAAkB,EAAnB,CAAR;AACH,KAHE;AAIHiB,IAAAA,WAAW,EAAGP,IAAD,IAAU;AACnBF,MAAAA,QAAQ,CAACP,2BAA2B,CAACS,IAAD,CAA5B,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,MAAMQ,qBAAqB,GAAGd,OAAO,CAAES,eAAF,EAAmBE,kBAAnB,CAAP,CAA+Cb,OAA/C,CAA9B","sourcesContent":["import React from \"react\";\r\nimport {sendMessageCreator, updateNewMessagebodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {StoreContext} from \"../../StoreContext\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const DialogsContainer = () => {\r\n\r\n    // don't write the bracket on the same line\r\n    return <StoreContext.Consumer>\r\n        {(store) => {\r\n\r\n            let onSendMessageClick = () => {\r\n                store.dispatch(sendMessageCreator());\r\n            }\r\n            let onNewMessageChange = (body) => {\r\n                store.dispatch(updateNewMessagebodyCreator(body));\r\n            }\r\n\r\n            return (\r\n                <Dialogs updateNewMessageBody = {onNewMessageChange}\r\n                         sendMessage = {onSendMessageClick}\r\n                         dialogsPage = {store.getState().dialogsPage}/>)\r\n        }\r\n        }\r\n    </StoreContext.Consumer>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageBody: () => {\r\n            dispatch(sendMessageCreator());\r\n        },\r\n        sendMessage: (body) => {\r\n            dispatch(updateNewMessagebodyCreator(body));\r\n        }\r\n    }\r\n}\r\n\r\nconst SuperDialogsContainer = connect (mapStateToProps, mapDispatchToProps) (Dialogs);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}