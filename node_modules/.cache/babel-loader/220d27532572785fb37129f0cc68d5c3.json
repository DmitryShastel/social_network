{"ast":null,"code":"var _jsxFileName = \"C:\\\\incubator\\\\social_network(js)\\\\src\\\\components\\\\Users\\\\UsersContainer.js\";\nimport React from \"react\";\nimport { follow, getUsers, setCurrentPage, setTotalUserslCount, setUsers, toggleFollowingInProgress, toggleIsFetching, unfollow } from \"../../redux/users-reducer\";\nimport { connect } from \"react-redux\";\nimport { Users } from \"./Users\";\nimport { Preloader } from \"../common/Preloader/Preloader\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUserCount: this.props.totalUserCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      toggleFollowingInProgress: this.props.toggleFollowingInProgress,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUserCount: state.usersPage.totalUserCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n          dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingInProgress,\n  getUsers\n})(UsersContainer);","map":{"version":3,"sources":["C:/incubator/social_network(js)/src/components/Users/UsersContainer.js"],"names":["React","follow","getUsers","setCurrentPage","setTotalUserslCount","setUsers","toggleFollowingInProgress","toggleIsFetching","unfollow","connect","Users","Preloader","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","componentDidMount","currentPage","render","isFetching","totalUserCount","users","followingInProgress","mapStateToProps","state","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,MADJ,EAEIC,QAFJ,EAGIC,cAHJ,EAIIC,mBAJJ,EAKIC,QALJ,EAMIC,yBANJ,EAOIC,gBAPJ,EAQIC,QARJ,QASO,2BATP;AAUA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,SAAR,QAAwB,+BAAxB;;AAGA,MAAMC,cAAN,SAA6BZ,KAAK,CAACa,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAMzCC,aANyC,GAMxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWd,QAAX,CAAoBa,UAApB,EAAgC,KAAKC,KAAL,CAAWC,QAA3C;AACH,KARwC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWd,QAAX,CAAoB,KAAKc,KAAL,CAAWG,WAA/B,EAA4C,KAAKH,KAAL,CAAWC,QAAvD;AACH;;AAODG,EAAAA,MAAM,GAAG;AACL,wBAAO,0CACF,KAAKJ,KAAL,CAAWK,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAsC,IADpC,eAEH,oBAAC,KAAD;AAAO,MAAA,cAAc,EAAI,KAAKL,KAAL,CAAWM,cAApC;AACO,MAAA,QAAQ,EAAI,KAAKN,KAAL,CAAWC,QAD9B;AAEO,MAAA,WAAW,EAAI,KAAKD,KAAL,CAAWG,WAFjC;AAGO,MAAA,aAAa,EAAI,KAAKL,aAH7B;AAIO,MAAA,KAAK,EAAI,KAAKE,KAAL,CAAWO,KAJ3B;AAKO,MAAA,MAAM,EAAI,KAAKP,KAAL,CAAWf,MAL5B;AAMO,MAAA,QAAQ,EAAI,KAAKe,KAAL,CAAWR,QAN9B;AAOO,MAAA,yBAAyB,EAAI,KAAKQ,KAAL,CAAWV,yBAP/C;AAQO,MAAA,mBAAmB,EAAI,KAAKU,KAAL,CAAWQ,mBARzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAaH;;AAzBwC;;AA4B7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHH,IAAAA,KAAK,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,KADpB;AAEHN,IAAAA,QAAQ,EAAES,KAAK,CAACC,SAAN,CAAgBV,QAFvB;AAGHK,IAAAA,cAAc,EAAEI,KAAK,CAACC,SAAN,CAAgBL,cAH7B;AAIHH,IAAAA,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR,WAJ1B;AAKHE,IAAAA,UAAU,EAAEK,KAAK,CAACC,SAAN,CAAgBN,UALzB;AAMHG,IAAAA,mBAAmB,EAAEE,KAAK,CAACC,SAAN,CAAgBH;AANlC,GAAP;AAQH,CATD;AAWA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,eAAef,OAAO,CAACgB,eAAD,EAAkB;AACpCxB,EAAAA,MADoC;AAEpCO,EAAAA,QAFoC;AAGpCL,EAAAA,cAHoC;AAIpCG,EAAAA,yBAJoC;AAKpCJ,EAAAA;AALoC,CAAlB,CAAP,CAMZU,cANY,CAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n    follow,\r\n    getUsers,\r\n    setCurrentPage,\r\n    setTotalUserslCount,\r\n    setUsers,\r\n    toggleFollowingInProgress,\r\n    toggleIsFetching,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/>: null}\r\n            <Users totalUserCount = {this.props.totalUserCount}\r\n                   pageSize = {this.props.pageSize}\r\n                   currentPage = {this.props.currentPage}\r\n                   onPageChanged = {this.onPageChanged}\r\n                   users = {this.props.users}\r\n                   follow = {this.props.follow}\r\n                   unfollow = {this.props.unfollow}\r\n                   toggleFollowingInProgress = {this.props.toggleFollowingInProgress}\r\n                   followingInProgress = {this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUserCount: state.usersPage.totalUserCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n          dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingInProgress,\r\n    getUsers,\r\n})(UsersContainer);\r\n"]},"metadata":{},"sourceType":"module"}