{"ast":null,"code":"let store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you',\n        likesCount: 12\n      }, {\n        id: 2,\n        message: 'It\\'s my first post',\n        likesCount: 11\n      }],\n      newPostText: ''\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'Yo'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }, {\n        id: 4,\n        message: 'Yo'\n      }, {\n        id: 5,\n        message: 'Yo'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Dimych'\n      }, {\n        id: 2,\n        name: 'Andrew'\n      }, {\n        id: 3,\n        name: 'Sveta'\n      }, {\n        id: 4,\n        name: 'Sasha'\n      }, {\n        id: 5,\n        name: 'Viktor'\n      }, {\n        id: 6,\n        name: 'Valera'\n      }]\n    },\n    sidebar: {\n      friends: [{\n        name: \"Andrew\"\n      }, {\n        name: \"Artem\"\n      }, {\n        name: \"Alexander\"\n      }]\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._renderEntireTree = observer;\n  },\n\n  dispatch(action) {\n    //{ type: 'ADD-POST'}\n    if (action.type === 'ADD-POST') {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        likesCount: 0\n      };\n\n      this._state.profilePage.posts.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._renderEntireTree(this._state);\n    } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._renderEntireTree(this._state);\n    }\n  }\n\n};\nexport default store;\nwindow.store = store; // store OOP","map":{"version":3,"sources":["C:/incubator/social_network(js)/src/redux/state.js"],"names":["store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","messages","dialogs","name","sidebar","friends","getState","subscribe","observer","_renderEntireTree","dispatch","action","type","newPost","push","newText","window"],"mappings":"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","sourcesContent":["let store = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: 'Hi, how are you', likesCount: 12},\r\n                {id: 2, message: 'It\\'s my first post', likesCount: 11}\r\n            ],\r\n            newPostText: ''\r\n        },\r\n        dialogsPage: {\r\n            messages: [\r\n                {id: 1, message: 'Hi'},\r\n                {id: 2, message: 'Yo'},\r\n                {id: 3, message: 'Yo'},\r\n                {id: 4, message: 'Yo'},\r\n                {id: 5, message: 'Yo'},\r\n            ],\r\n\r\n            dialogs:  [\r\n                {id: 1, name: 'Dimych'},\r\n                {id: 2, name: 'Andrew'},\r\n                {id: 3, name: 'Sveta'},\r\n                {id: 4, name: 'Sasha'},\r\n                {id: 5, name: 'Viktor'},\r\n                {id: 6, name: 'Valera'},\r\n            ],\r\n        },\r\n        sidebar :{\r\n            friends: [\r\n                {name: \"Andrew\"},\r\n                {name: \"Artem\"},\r\n                {name: \"Alexander\"},\r\n            ]}\r\n    },\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n\r\n    subscribe  (observer) {\r\n        this._renderEntireTree = observer\r\n    },\r\n    dispatch(action) { //{ type: 'ADD-POST'}\r\n        if (action.type === 'ADD-POST') {\r\n            let newPost = {\r\n                id: 5,\r\n                message: this._state.profilePage.newPostText,\r\n                likesCount: 0\r\n            };\r\n            this._state.profilePage.posts.push(newPost);\r\n            this._state.profilePage.newPostText = '';\r\n            this._renderEntireTree(this._state);\r\n        } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\r\n            this._state.profilePage.newPostText = action.newText;\r\n            this._renderEntireTree(this._state);\r\n        }\r\n    }\r\n}\r\nexport default store;\r\nwindow.store = store;\r\n\r\n// store OOP"]},"metadata":{},"sourceType":"module"}